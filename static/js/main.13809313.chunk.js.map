{"version":3,"sources":["components/ErrorToast/index.js","redux/modules/app.js","containers/Home/components/category/index.js","containers/Home/components/Headline/index.js","containers/Home/index.js","containers/App/index.js","utils/request.js","redux/middleware/api.js","redux/modules/entities/products.js","redux/modules/entities/shops.js","redux/modules/entities/orders.js","redux/modules/entities/comments.js","redux/modules/entities/index.js","redux/modules/home.js","redux/modules/detail.js","redux/modules/index.js","redux/store.js","index.js"],"names":["ErrorToast","msg","this","props","react_default","a","createElement","className","_this","timer","setTimeout","clearError","clearTimeout","Component","initialState","error","types","actions","type","reducer","state","arguments","length","undefined","action","Object","objectSpread","getError","app","dataSource","name","src","Category","lib_default","dots","arrow","slidesToShow","swipeToSlide","autoplay","map","section","index","key","item","i","alt","pic","title","url","Headline","vertical","href","Home","category","components_Headline","App","_this$props","appActions","containers_Home","components_ErrorToast","connect","dispatch","bindActionCreators","headers","Headers","Accept","Content-type","handleResponse","response","json","console","concat","Promise","reject","message","fetchData","endpoint","schema","fetch","method","then","catch","err","data","normalizeData","_ref","id","kvObj","ids","Array","isArray","forEach","push","defineProperty","products","rootReducer","combineReducers","shops","orders","comments","entities","home","detail","store","createStore","applyMiddleware","thunk","next","callAPI","Error","every","actionWith","finalAction","_types","slicedToArray","requestType","successType","failureType","ReactDOM","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.13809313.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass ErrorToast extends Component {\r\n  render() {\r\n    const { msg } = this.props;\r\n    return (\r\n      <div className=\"errorToast\">\r\n        <div className=\"errorToast_text\">{msg}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timer = setTimeout(() => {\r\n        this.props.clearError();\r\n    }, 3000);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n      if(this.timer) {\r\n          clearTimeout(this.timer);\r\n      }\r\n  }\r\n}\r\n\r\nexport default ErrorToast;\r\n","const initialState = {\r\n  error: null\r\n};\r\n\r\nexport const types = {\r\n  CLEAR_ERROR: \"APP/CLEAR_ERROR\"\r\n};\r\n\r\n//action creators\r\nexport const actions = {\r\n  clearError: () => ({\r\n    type: types.CLEAR_ERROR\r\n  })\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  const { type, error } = action;\r\n  if (type === types.CLEAR_ERROR) {\r\n    return { ...state, error: null };\r\n  } else if (error) {\r\n    return { ...state, error: error };\r\n  }\r\n  return state;\r\n};\r\nexport default reducer;\r\n\r\n\r\n// selectors 從state中獲取某一部分狀態  這裡取error\r\n// UI層和狀態管理層 它的接口都是透過selectors函數通訊的，實現解藕    \r\nexport const getError = (state) => {\r\n  return state.app.error\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"./style.css\";\r\n\r\nconst dataSource = [\r\n  [\r\n    {\r\n      name: \"喜劇\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599666.svg\"\r\n    },\r\n    {\r\n      name: \"愛情\",\r\n      src: \"https://image.flaticon.com/icons/svg/1306/1306596.svg\"\r\n    },\r\n    {\r\n      name: \"懸疑\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599683.svg\"\r\n    },\r\n    {\r\n      name: \"奇幻\",\r\n      src: \"https://image.flaticon.com/icons/svg/1224/1224042.svg\"\r\n    },\r\n    {\r\n      name: \"科幻\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599682.svg\"\r\n    },\r\n    {\r\n      name: \"歌舞\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599677.svg\"\r\n    },\r\n    {\r\n      name: \"戰爭\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599657.svg\"\r\n    },\r\n    {\r\n      name: \"恐怖\",\r\n      src: \"https://www.flaticon.com/premium-icon/icons/svg/1385/1385820.svg\"\r\n    },\r\n    {\r\n      name: \"災難\",\r\n      src: \"https://image.flaticon.com/icons/svg/733/733077.svg\"\r\n    },\r\n    {\r\n      name: \"動作\",\r\n      src: \"https://image.flaticon.com/icons/svg/1484/1484841.svg\"\r\n    }\r\n  ],\r\n  [\r\n    {\r\n      name: \"預告\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599691.svg\"\r\n    },\r\n    {\r\n      name: \"賣座\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599672.svg\"\r\n    },\r\n    {\r\n      name: \"爆米花\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599652.svg\"\r\n    },\r\n    {\r\n      name: \"奧斯卡\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599645.svg\"\r\n    },\r\n    {\r\n      name: \"金棕櫚\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599685.svg\"\r\n    },\r\n    {\r\n      name: \"紀錄片\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599662.svg\"\r\n    },\r\n    {\r\n      name: \"剪接\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599669.svg\"\r\n    },\r\n    {\r\n      name: \"原聲\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599648.svg\"\r\n    },\r\n    {\r\n      name: \"導演\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599664.svg\"\r\n    },\r\n    {\r\n      name: \"服裝\",\r\n      src: \"https://image.flaticon.com/icons/svg/1599/1599674.svg\"\r\n    }\r\n  ]\r\n];\r\n\r\nclass Category extends Component {\r\n  render() {\r\n    const settings = {\r\n      dots: true,\r\n      arrow: false,\r\n      slidesToShow: 1,\r\n      swipeToSlide: true,\r\n      autoplay: true\r\n    };\r\n    return (\r\n      <div className=\"category\">\r\n        <Slider {...settings}>\r\n          {dataSource.map((section, index) => {\r\n            return (\r\n              <div key={index}>\r\n                {section.map((item, i) => {\r\n                  return (\r\n                    <div className=\"category__section\" key={i}>\r\n                      <img\r\n                        className=\"category__icon\"\r\n                        src={item.src}\r\n                        alt=\"img\"\r\n                      />\r\n                      <div>\r\n                        <span className=\"category__text\">{item.name}</span>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </Slider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;\r\n","import React, { Component } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport './style.css';\r\n\r\nconst dataSource = [\r\n  {\r\n    pic:\r\n      \"https://upload.wikimedia.org/wikipedia/zh/2/2b/Captain_Marvel_Poster.jpg\",\r\n    title: \"逆轉終局之戰的關鍵人物！漫威「史上最強」女英雄《驚奇隊長》\",\r\n    url:\r\n      \"https://zh.wikipedia.org/wiki/驚奇隊長_(電影)\"\r\n  },\r\n  {\r\n    pic:\r\n      \"https://upload.wikimedia.org/wikipedia/zh/8/8a/Avengers_Infinity_War_Poster.jpg\",\r\n    title: \"【這局我布了10 年】漫威如何用18 部電影鋪陳《復仇者聯盟3：無限之戰》 \",\r\n    url:\r\n      \"https://zh.wikipedia.org/wiki/復仇者聯盟3：無限之戰\"\r\n  },\r\n  {\r\n    pic:\r\n      \"https://upload.wikimedia.org/wikipedia/zh/7/76/Avengers_Endgame_Poster.jpg\",\r\n    title: \"《復仇者聯盟：終局之戰》剪輯官宣完工！電影時長依舊未知\",\r\n    url:\r\n      \"https://zh.wikipedia.org/wiki/復仇者聯盟：終局之戰\"\r\n  }\r\n];\r\nclass Headline extends Component {\r\n  render() {\r\n    const settings = {\r\n      slidesToShow: 1,\r\n      swipeToSlide: true,\r\n      autoplay: true,\r\n      vertical: true //自上而下滾動效果\r\n    };\r\n    return (\r\n      <div className=\"headline\">\r\n        <div className=\"headline__logo\" />\r\n        <div className=\"headline__slider\">\r\n          <Slider {...settings}>\r\n            {dataSource.map((item, index) => {\r\n              return (\r\n                <a\r\n                  key={index}\r\n                  className=\"headline__sliderInner\"\r\n                  href={item.url}\r\n                >\r\n                  <div className=\"headline__sliderTitle\">{item.title}</div>\r\n                  <div className=\"headline__sliderImgWrapper\">\r\n                    <img\r\n                      className=\"headline__sliderImg\"\r\n                      src={item.pic}\r\n                      alt=\"sliderImg\"\r\n                    />\r\n                  </div>\r\n                </a>\r\n              );\r\n            })}\r\n          </Slider>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Headline;\r\n","import React, { Component } from 'react';\r\nimport Category from './components/category';\r\nimport Headline from './components/Headline';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               <Category/>\r\n               <Headline/> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport ErrorToast from \"../../components/ErrorToast\"\nimport { actions as appActions, getError } from \"../../redux/modules/app\";\nimport Home from '../Home';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const {\n      error,\n      appActions: { clearError }\n    } = this.props;\n    return (\n      <div className=\"App\">\n         hello react\n         <Home/>\n         {error ? <ErrorToast msg={error} clearError={clearError} /> : null}\n      </div>\n    );\n  }\n}\n\n// 常見的容器型組件模板式代碼 分別從redux狀態管理層　獲取　容器型組件要用的state和action方法　\nconst mapStateToProps = (state, props) => {\n  return  {\n    error: getError(state)\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //bindActionCreators將　appActions進行進一步包裝　在容器型組件使用時　可以直接發送對應的Action　不需要再調用dispatch的方法來發送\n    //bindActionCreators的作用是將一個或多個action和dispatch組合起來生成mapDispatchToProps需要生成的內容。把actions和dispatch合併\n    appActions: bindActionCreators(appActions, dispatch)\n  }\n}\n\n//使用 React Redux 提供的 connect() function 產生 container component 而非手動寫成\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","const headers = new Headers({\r\n   \"Accept\": \"application/json\",\r\n   \"Content-type\": \"application/json\",\r\n})\r\n\r\n//對網路請求進行封裝\r\nfunction get(url) {\r\n    return fetch(url, {\r\n        method: \"GET\",\r\n        headers: headers\r\n    }).then(response => {\r\n        handleResponse(url, response);\r\n    }).catch(err=>{\r\n        console.error(`Request failed. Url=${url}. Message=${err}`);\r\n        return Promise.reject({error:{message:\"Request failed\"} });\r\n    })\r\n}\r\n\r\nfunction post(url, data) {\r\n    return fetch(url, {\r\n        method: \"POST\",\r\n        headers: headers,\r\n        body: data\r\n    }).then(response => {\r\n        handleResponse(url, response);\r\n    }).catch(err=>{\r\n        console.error(`Request failed. Url=${url}. Message=${err}`);\r\n        return Promise.reject({error:{message:\"Request failed\"} });\r\n    })\r\n}\r\n\r\nfunction handleResponse(url, response) {\r\n    if(response.state === 200) {\r\n        return response.json();\r\n    } else {\r\n        console.error(`Request failed. Url= ${url}`);\r\n        return Promise.reject({error:{message:\"Request failed due to server error\"} });\r\n    }\r\n}\r\n\r\nexport {get,post}","import { get } from \"../../utils/request\";\r\n\r\n//經過中間件處理的action所具有的標識\r\nexport const FETCH_DATA = \"FETCH DATA\";\r\n\r\n//next 代表當前中間件的下一個中間件所提供的dispatch方法\r\nexport default store => next => action => {\r\n  const callAPI = action[FETCH_DATA];\r\n  if (typeof callAPI === \"undefined\") {\r\n    return next(action);\r\n  }\r\n\r\n  const { endpoint, schema, types } = callAPI;\r\n  if (typeof endpoint !== \"string\") {\r\n    throw new Error(\"endpoint必須為字符串類型的URL\");\r\n  }\r\n  if (!schema) {\r\n    throw new Error(\"必須指定領域實體的schema\");\r\n  }\r\n  if (!Array.isArray(types) && types.length !== 3) {\r\n    throw new Error(\"需要指定一個包含了3個action type的數組\");\r\n  }\r\n  if (!types.every(type => typeof type === \"string\")) {\r\n    throw new Error(\"action type必須為字符串類型\");\r\n  }\r\n\r\n  //增強版action使其包含額外參數\r\n  const actionWith = data => {\r\n    const finalAction = {...action, ...data} //在原有基礎上，擴展data\r\n    delete finalAction[FETCH_DATA] //在往後傳遞不需要 這一層級屬性刪除\r\n    return finalAction\r\n  }\r\n\r\n  const [requestType, successType, failureType] = types;\r\n\r\n  next(actionWith({ type: requestType })); //有一個請求即將被發送\r\n  //傳入請求的url 數據實體schema\r\n  return fetchData(endpoint, schema).then(\r\n    response =>\r\n      next(\r\n        actionWith({\r\n          type: successType,\r\n          response\r\n        })\r\n      ),\r\n    error =>\r\n      next(\r\n        actionWith({\r\n          type: failureType,\r\n          error: error.message || \"獲取數據失敗\"\r\n        })\r\n      )\r\n  );\r\n};\r\n\r\n//執行網路請求\r\nconst fetchData = (endpoint, schema) => {\r\n  return get(endpoint).then(data => {\r\n    return normalizeData(data, schema);\r\n  });\r\n};\r\n\r\n//根據schema, 將獲取的數據扁平化處理\r\nconst normalizeData = (data, schema) => {\r\n  const { id, name } = schema;\r\n  let kvObj = {}; //kv key value\r\n  let ids = []; //存取到數據所獲取的每一項id\r\n  if (Array.isArray(data)) {\r\n    data.forEach(item => {\r\n      kvObj[item[id]] = item;\r\n      ids.push(item[id]);\r\n    });\r\n  } else { //不是Array類型 只是一個對象\r\n    kvObj[data[id]] = data;\r\n    ids.push(data[id]);\r\n  }\r\n  return {\r\n    [name]: kvObj, //掛載到name屬性下 name代表不同領域實體的名字 例如獲取products時 name是products\r\n    ids\r\n  };\r\n};\r\n","export const schema = {\r\n  name: 'products',\r\n  id: 'id',\r\n} \r\n\r\nconst reducer = (state = {}, action) => {\r\n    if(action.response && action.response.products) {\r\n      return {...state, ...action.response.products}\r\n    }\r\n    return state;\r\n  };\r\nexport default reducer;","const reducer = (state = {}, action) => {\r\n    return state;\r\n  };\r\nexport default reducer;","const reducer = (state = {}, action) => {\r\n  return state;\r\n};\r\nexport default reducer;\r\n","const reducer = (state = {}, action) => {\r\n    return state;\r\n  };\r\nexport default reducer;","import {combineReducers} from \"redux\";\r\nimport products from \"./products\";\r\nimport shops from \"./shops\";\r\nimport orders from \"./orders\";\r\nimport comments from \"./comments\";\r\n\r\n// 合併領域狀態\r\nconst  rootReducer = combineReducers({\r\n    products,\r\n    shops,\r\n    orders,\r\n    comments\r\n})\r\n\r\nexport default rootReducer","import { get } from \"../../utils/request\"; //導入封裝好的get方法\r\nimport url from \"../../utils/url\";\r\nimport { FETCH_DATA } from \"../middleware/api\"\r\nimport { schema } from \"./entities/products\"\r\n\r\nexport const types = {\r\n  FETCH_LIKES_REQUEST: \"HOME/FETCH_LIKES_REQUEST\", //猜你喜歡\r\n  FETCH_LIKES_SUCCESS: \"HOME/FETCH_LIKES_SUCCESS\",\r\n  FETCH_LIKES_FAILURE: \"HOME/FETCH_LIKES_FAILURE\"\r\n};\r\n\r\n\r\nexport const actions = {\r\n  loadLikes: () => {\r\n    return (dispatch, getState) => {\r\n      const endpoint = url.getProductList(0, 10) //參數 第一條開始獲取 每頁獲取十條\r\n      return dispatch(fetchLikes(endpoint))\r\n    }\r\n  },\r\n}\r\n\r\n//所有與發送請求相關的處理\r\nconst fetchLikes = (endpoint) => ({\r\n  [FETCH_DATA]: {\r\n    types: [\r\n      types.FETCH_LIKES_REQUEST,\r\n      types.FETCH_LIKES_SUCCESS,\r\n      types.FETCH_LIKES_FAILURE\r\n    ],\r\n    endpoint, //對應url\r\n    schema //對應領域實體\r\n  }\r\n})\r\n\r\n\r\nconst reducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.FETCH_LIKES_REQUEST:\r\n    // todo\r\n    case types.FETCH_LIKES_SUCCESS:\r\n    // todo\r\n    case types.FETCH_LIKES_FAILURE:\r\n    // todo\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","const reducer = (state = {}, action) => {\r\n    return state;\r\n  };\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport entities from \"./entities\";\r\nimport home from \"./home\";\r\nimport detail from \"./detail\";\r\nimport app from \"./app\";\r\n\r\n//合併成根reducer \r\nconst rootReducer = combineReducers({\r\n    entities,\r\n    home,\r\n    detail,\r\n    app\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from \"redux\"; //使用中間件需要appltMiddleware\r\nimport thunk from \"redux-thunk\"; //處理異步中間件  \r\nimport api from \"./middleware/api\";\r\nimport rootReducer from \"./modules\";\r\n\r\nlet store;\r\n\r\nif (\r\n  process.env.NODE_ENV !== \"production\" &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n) {\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n  store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk,api)));\r\n} else {\r\n  //thunk放前api放後 先讓thunk處理函數類型的action，然後讓api中間件處理具體請求的封裝  \r\n  store = createStore(rootReducer, applyMiddleware(thunk,api)); \r\n}\r\nexport default store; ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./containers/App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}